sidebarLayout(
# Inputs
sidebarPanel(
h1("Image-based Voting Behaviour"),
h3(paste(text,samplesize)),
# Select variable for y-axis
selectInput(inputId = "x",
label = "Demographic:",
choices = c("Gender"="Gender",
"Age"="Age",
"Countries"="Place",
"Political Identity"="Political0"
),
selected = "Gender"),
selectInput(inputId = "y",
label = " Question",
choices = c("What political orientation do you think this politician have?"="Judge",
"Would you vote for him?"="Judge2" ,
"Text with Image or Image only"="ImageText",
"Blue or Grey?"="blue",
"Red or Grey?"="red",
"Yellow or Grey"="yellow",
"Smile or Content?"="smile"
),
selected = "Judge")),
# Outputs
mainPanel(
plotOutput("barplot",height = 500))
))
# Define server function required to create the scatterplot
server <- function(input, output) {
# Create the scatterplot object the plotOutput function is expecting
output$barplot <- renderPlot({
p1<-ggplot(data = df, aes_string(x = input$x, y=input$x,fill=input$y )) +
geom_bar(stat = "identity")+
theme(axis.title.x = element_text( size=18))+
theme(axis.title.y = element_text( size=18))+
theme(legend.text=element_text(size=14),legend.title=element_text(size=14))+
coord_flip()+
theme_wsj()
pt2 <- reactive({
input$do2
if (input$do2){
return(qplot(rnorm(500),fill=I("blue"),binwidth=0.2,title="plotgraph2"))
} else {
return(NULL)
}
})
grid.arrange(p1,p2, ncol=2,widths = c(2,1))
})
}
# Create a Shiny app object
shinyApp(ui = ui, server = server)
runApp('D:/IC/leaderX/paper/prez/script/ab2.R')
runApp('D:/IC/leaderX/paper/prez/script/ab2.R')
runApp('D:/IC/leaderX/paper/prez/script/ab2.R')
library(shiny); runApp('D:/IC/leaderX/paper/prez/script/ab2.R')
runApp('D:/IC/leaderX/paper/prez/script/ab2.R')
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
install.packages("(shinyWidgets)")
install.packages("shinyWidgets")
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
runApp('D:/rMockUp/election.R')
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
install.packages("tableHTML")
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
runApp('D:/IC/leaderX/paper/prez/script/ab3.R')
runApp('D:/IC/leaderX/paper/prez/script/ab4.R')
runApp('D:/IC/leaderX/paper/prez/script/ab4.R')
install.packages("ggmosaic")
install.packages("ggmosaic")
library(plyr)
library(dplyr)
library(tidyverse)
library (ggplot2)
library(ggthemes)
library(scales)
library(magrittr)
library(wesanderson)
df<-read.csv('D:/IC/leaderX/paper/leaderXSurvey.csv')
#total vote
vote<-ggplot(data=df)+
geom_bar(mapping=aes(x=factor(1), fill=Vote),
width = 1)+
coord_polar("y", start=0)+
scale_fill_grey(start = .3, end = .9)+
ggtitle("Election Result")+
theme_fivethirtyeight()+
theme(aspect.ratio=1,axis.ticks = element_blank(),
axis.text.y = element_blank())+
theme(axis.text= element_blank(),panel.grid  = element_blank())+
labs(subtitle="n=31")
vote
#total opinion
opinion<-ggplot(data=df)+
geom_bar(mapping=aes(x=factor(1), fill=Influence),
width = 1)+
coord_polar("y")+
scale_fill_grey(start = 1, end = .3)+
ggtitle("Do you think the image of politicians \n affect how people vote?")+
theme_fivethirtyeight()+
theme(aspect.ratio=1,axis.ticks = element_blank(),
axis.text.y = element_blank())+
theme(axis.text= element_blank(),panel.grid  = element_blank())+
labs(subtitle="n=31")
opinion
#genders
genders<-ggplot(data=df)+
geom_bar(mapping=aes(x=Gender, fill=Vote),width = .3)+
ggtitle("Distribution of votes between genders")+
theme_fivethirtyeight()+
scale_fill_grey(start = .3, end = .9)+
theme(legend.position="bottom")+
theme(legend.title=element_blank())+
theme(plot.title = element_text(size =14,color= "grey10"))+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_text(color="grey10"))
genders
ag<-ggplot(data=df,mapping=aes(x=Gender, y=Age))+
geom_jitter(position=position_jitter(0.2),aes(color=Place.of.Origin, shape= Occupation),size =3)+
ggtitle("Demography of voters")+
theme_fivethirtyeight()+
theme(plot.title = element_text(size =14,color= "grey10"))
ag
age<-ggplot(data=df,mapping=aes(x=Vote, y=Age))+
geom_boxplot(width=0.3)+
#geom_jitter(position=position_jitter(0.2),color="darkred")+
ggtitle("Distribution of voters'age")+
theme_fivethirtyeight()
age
job<-ggplot(na.omit(df))+geom_bar(
mapping =aes(x=Nationality, fill =factor(Occupation)),width = .2)+
ggtitle("Voters' nationality and employment status")+
theme_fivethirtyeight()+
scale_fill_grey(start = .3, end = 1)+
coord_flip()+
theme(legend.title=element_blank())
job
identity<-ggplot(data=df)+
geom_bar(mapping=aes(x=Identity, fill=Vote),width = .3)+
ggtitle("Political Identification of voters")+
theme_fivethirtyeight()+
scale_fill_grey(start = .3, end = .9)+
theme(legend.position="bottom")+
theme(legend.title=element_blank())+
theme(plot.title = element_text(size =14,color= "grey10"))+
theme(axis.title.x = element_blank())+
scale_x_discrete(limits=c('Left','Centre','None'))
identity
reason<-ggplot(data=df)+geom_bar(
mapping =aes(x=Vote, fill =Reason),
position="dodge",width = .3)+
ggtitle("Why did you vote for this image?")+
theme_fivethirtyeight()+
scale_fill_manual(values=c("slategray1",'grey90',"slategray3","grey50",'grey10'))+
theme(legend.title=element_blank())
#scale_fill_manual(values = wes_palette("IsleofDogs1"))
reason
neg<-ggplot(data=df)+geom_bar(
mapping =aes(x=Decision, fill =NegativeFeature),width = .2)+
ggtitle("Why did you vote for this image?")+
theme_fivethirtyeight()+
scale_fill_grey(start = .3, end = 1)+
theme(legend.title=element_blank())+
scale_x_discrete(limits=c('Yes','No'))
neg
neg<-ggplot(data=df)+geom_bar(
mapping =aes(x=Decision, fill =NegativeFeature),width = .2)+
ggtitle("Why did you vote for this image?")+
theme_fivethirtyeight()+
scale_fill_grey(start = .3, end = 1)+
theme(legend.title=element_blank())+
scale_x_discrete(limits=c('Yes','No'))
neg
reason<-ggplot(data=df)+geom_bar(
mapping =aes(x=Vote, fill =Reason),
position="dodge",width = .3)+
ggtitle("Why did you vote for this image?")+
theme_fivethirtyeight()+
scale_fill_manual(values=c("slategray1",'grey90',"slategray3","grey50",'grey10'))+
theme(legend.title=element_blank())
#scale_fill_manual(values = wes_palette("IsleofDogs1"))
reason
df<-read.csv('D:/IC/leaderX/paper/leaderXSurveyV2.csv')
reason<-ggplot(data=df)+geom_bar(
mapping =aes(x=Vote, fill =Reason),
position="dodge",width = .3)+
ggtitle("Why did you vote for this image?")+
theme_fivethirtyeight()+
scale_fill_manual(values=c("slategray1",'grey90',"slategray3","grey50",'grey10'))+
theme(legend.title=element_blank())
#scale_fill_manual(values = wes_palette("IsleofDogs1"))
reason
neg<-ggplot(data=df)+geom_bar(
mapping =aes(x=Decision, fill =NegativeFeature),width = .2)+
ggtitle("Why did you vote for this image?")+
theme_fivethirtyeight()+
scale_fill_grey(start = .3, end = 1)+
theme(legend.title=element_blank())+
scale_x_discrete(limits=c('Yes','No'))
neg
ggplot(data=df) +
geom_bar(aes(age,group=Gender,fill=Gender),subset(df,df$Gender=="Female")) +
geom_bar(aes(age,group=Gender,fill=Gender),subset(df,df$Gender=="Male")) +
scale_y_continuous(breaks=seq(-100,40,10),labels=abs(seq(-100,40,10))) +
coord_flip()
ggplot(data=df) +
geom_bar(aes(age,group=Gender,fill=Gender),subset(df1,df1$Gender=="Female")) +
geom_bar(aes(age,group=Gender,fill=Gender),subset(df1,df1$Gender=="Male")) +
scale_y_continuous(breaks=seq(-100,40,10),labels=abs(seq(-100,40,10))) +
coord_flip()
ggplot(data=df) +
geom_bar(aes(age,group=Gender,fill=Gender),subset(df,Gender=="Female")) +
geom_bar(aes(age,group=Gender,fill=Gender),subset(df,Gender=="Male")) +
scale_y_continuous(breaks=seq(-100,40,10),labels=abs(seq(-100,40,10))) +
coord_flip()
ggplot(data=test,aes(x=as.factor(Age),fill=Gender)) +
geom_bar(data=subset(test,g=="Female")) +
geom_bar(data=subset(test,g=="Male"),aes(y=..count..*(-1))) +
scale_y_continuous(breaks=seq(-40,40,10),labels=abs(seq(-40,40,10))) +
coord_flip()
# Create the scatterplot object the plotOutput function is expecting
output$plot1 <- renderPlot({
ggplot(data=test,aes(x=as.factor(Age),fill=Gender)) +
geom_bar(data=subset(test,g=="Female")) +
geom_bar(data=subset(test,g=="Male"),aes(y=..count..*(-1))) +
scale_y_continuous(breaks=seq(-40,40,10),labels=abs(seq(-40,40,10))) +
coord_flip()
})
ggplot(data=df,aes(x=as.factor(Age),fill=Gender)) +
geom_bar(data=subset(test,g=="Female")) +
geom_bar(data=subset(test,g=="Male"),aes(y=..count..*(-1))) +
scale_y_continuous(breaks=seq(-40,40,10),labels=abs(seq(-40,40,10))) +
coord_flip()
ggplot(data=df,aes(x=as.factor(Age),fill=Gender)) +
geom_bar(data=subset(df, Gender=="Female")) +
geom_bar(data=subset(df,Gender=="Male"),aes(y=..count..*(-1))) +
scale_y_continuous(breaks=seq(-40,40,10),labels=abs(seq(-40,40,10))) +
coord_flip()
#LEADER x SHINY script
library(tidyverse)
library(shiny)
library(dplyr)
library(googlesheets)
library(DT)
library(ggthemes)
library(shinyWidgets)
library(tableHTML
)
#fetching googlesheet and convert to data frame
gs_auth(new_user = TRUE)
gs_ls()
s<- gs_title("leaderXResult")
gs_ws_ls(s)
df<-gs_read(ss=s, ws = "surveyv2")
dfN<-gs_read(ss=s, ws = "offlineSheet")
#shiny app
samplesize=nrow(df)
text="Sample Size:"
populationsize=nrow(dfN)
text="Population Size:"
ui <- fluidPage(
setBackgroundColor("#FDF6E3"),
# Sidebar layout with a input and output definitions
sidebarLayout(
# Inputs
sidebarPanel(width=3,
tags$style(make_css(list('.well', 'border-width', '0px'))),
h1("Image-based Voting Behaviour"),
h3(paste(text,samplesize)),
h3(paste(text,populationsize)),
# Select variable for y-axis
radioInput(inputId = "x",
label = "Variables:",
choices = c("Countries"="Place",
"Political Identity"="Identity",
"Employment Status"="Occupation",
"Vote"="Vote"
),
selected = "Vote")),
# Outputs
mainPanel(
tabPanel("Plot",
fluidRow(
column(8, plotOutput("plot1", height=800))
#column(4, plotOutput("plot2",height=800)),
#column(12,  dataTableOutput(outputId = "dataTable"))
))
)))
# Define server function required to create the scatterplot
server <- function(input, output) {
# Create the scatterplot object the plotOutput function is expecting
output$plot1 <- renderPlot({
ggplot(data=df,aes(x=as.factor(Age),fill=Gender)) +
geom_bar(data=subset(df, Gender=="Female")) +
geom_bar(data=subset(df,Gender=="Male"),aes(y=..count..*(-1))) +
scale_y_continuous(breaks=seq(-40,40,10),labels=abs(seq(-40,40,10))) +
coord_flip()
})
}
# Create a Shiny app object
shinyApp(ui = ui, server = server)
ui <- fluidPage(
setBackgroundColor("#FDF6E3"),
# Sidebar layout with a input and output definitions
sidebarLayout(
# Inputs
sidebarPanel(width=3,
tags$style(make_css(list('.well', 'border-width', '0px'))),
h1("Image-based Voting Behaviour"),
h3(paste(text,samplesize)),
h3(paste(text,populationsize)),
# Select variable for y-axis
radioButtons(inputId = "x",
label = "Variables:",
choices = c("Countries"="Place",
"Political Identity"="Identity",
"Employment Status"="Occupation",
"Vote"="Vote"
),
selected = "Vote")),
# Outputs
mainPanel(
tabPanel("Plot",
fluidRow(
column(8, plotOutput("plot1", height=800))
#column(4, plotOutput("plot2",height=800)),
#column(12,  dataTableOutput(outputId = "dataTable"))
))
)))
# Define server function required to create the scatterplot
server <- function(input, output) {
# Create the scatterplot object the plotOutput function is expecting
output$plot1 <- renderPlot({
ggplot(data=df,aes(x=as.factor(Age),fill=Gender)) +
geom_bar(data=subset(df, Gender=="Female")) +
geom_bar(data=subset(df,Gender=="Male"),aes(y=..count..*(-1))) +
scale_y_continuous(breaks=seq(-40,40,10),labels=abs(seq(-40,40,10))) +
coord_flip()
})
}
# Create a Shiny app object
shinyApp(ui = ui, server = server)
output$plot1 <- renderPlot({
ggplot(data=df,aes(x=as.factor(Age),fill=Gender)) +
geom_bar(data=subset(df, Gender=="Female")) +
geom_bar(data=subset(df,Gender=="Male"),aes(y=..count..*(-1))) +
scale_y_continuous(breaks=seq(-10,10,5),labels=abs(seq(-10,10,50))) +
coord_flip()
# Create the scatterplot object the plotOutput function is expecting
output$plot1 <- renderPlot({
ggplot(data=df,aes(x=as.factor(Age),fill=Gender)) +
geom_bar(data=subset(df, Gender=="Female")) +
geom_bar(data=subset(df,Gender=="Male"),aes(y=..count..*(-1))) +
scale_y_continuous(breaks=seq(-10,10,5),labels=abs(seq(-10,10,50))) +
coord_flip()
})
# Create the scatterplot object the plotOutput function is expecting
output$plot1 <- renderPlot({
ggplot(data=df,aes(x=as.factor(Age),fill=Gender)) +
geom_bar(data=subset(df, Gender=="Female")) +
geom_bar(data=subset(df,Gender=="Male"),aes(y=..count..*(-1))) +
scale_y_continuous(breaks=seq(-10,10,5),labels=abs(seq(-10,10,50))) +
coord_flip()
})
runApp('D:/IC/leaderX/paper/prez/script/leaderX.R')
library(shiny); runApp('D:/IC/leaderX/paper/prez/script/leaderX.R')
runApp('D:/IC/leaderX/paper/prez/script/leaderX.R')
runApp('D:/IC/leaderX/paper/prez/script/leaderX.R')
runApp('D:/IC/leaderX/paper/prez/script/leaderX.R')
runApp('D:/IC/leaderX/paper/prez/script/leaderX.R')
runApp('D:/IC/leaderX/paper/prez/script/leaderX.R')
runApp('D:/IC/leaderX/paper/prez/script/leaderX.R')
runApp('D:/IC/leaderX/paper/prez/script/leaderX.R')
runApp('D:/IC/leaderX/paper/prez/script/leaderX.R')
runApp('D:/IC/leaderX/paper/prez/script/leaderX.R')
runApp('D:/IC/leaderX/paper/prez/script/leaderX.R')
runApp('D:/IC/leaderX/paper/prez/script/leaderX.R')
#LEADER x SHINY script
library(tidyverse)
library(shiny)
library(dplyr)
library(googlesheets)
library(DT)
library(ggthemes)
library(shinyWidgets)
library(tableHTML)
library(magrittr)
#fetching googlesheet and convert to data frame
gs_auth(new_user = TRUE)
gs_ls()
s<- gs_title("leaderXResult")
gs_ws_ls(s)
df<-gs_read(ss=s, ws = "surveyv2")
dfN<-gs_read(ss=s, ws = "offlineSheet")
dfN    %>%
count(Date,Vote)
runApp('D:/IC/leaderX/paper/prez/script/leaderX.R')
View(dfN)
runApp('D:/IC/leaderX/paper/prez/script/leaderX.R')
dfN    %>%
count(Date,Vote) %/%
ggplot(aes(x=Date,y=n,colour=Vote))+
geom_line()
dfN    %>%
count(Date,Vote) %/%
ggplot(aes(x=Date,y=n,colour=Vote))+
geom_line()
output$plot2 <- renderPlot({
dfN    %>%
count(Date,Vote) %/%
ggplot(dfN,aes(x=Date,y=n,colour=Vote))+
geom_line()
})
dfN    %>%
count(Date,Vote) %/%
ggplot(dfN,aes(x=Date,y=n,colour=Vote))+
geom_line()
ggplot(    dfN%>%count(Date,Vote),aes(x=Date,y=n,colour=Vote))+
geom_line()
ggplot(    dfN%>%count(Date,Vote),aes(x=Date,y=n,colour=Vote))+
geom_line()
ggplot(dfN%>%count(Date,Vote),aes(x=Date,y=n,colour=Votem,group=1))+
geom_line()
ggplot(dfN%>%count(Date,Vote),aes(x=Date,y=n,colour=Vote,group=1))+
geom_line()
output$plot2 <- renderPlot({
ggplot(dfN%>%count(Date,Vote),aes(x=Date,y=n,colour=Vote,group=3))+
geom_line()
output$plot2 <- renderPlot({
ggplot(dfN%>%count(Date,Vote),aes(x=Date,y=n,colour=Vote,group=3))+
geom_line()
ggplot(dfN%>%count(Date,Vote),aes(x=Date,y=n,colour=Vote,group=Vote))+
geom_line()
ggplot(dfN%>%count(Date,Vote),aes(x=Date,y=n,colour=Vote,group=Vote))+
geom_line()
ggplot(dfN%>%count(Date,Vote),aes(x=Date,y=n,colour=y))+
geom_line()
ggplot(dfN%>%count(Date,Vote),aes(x=Date,y=n,colour=y))+
geom_line()
ggplot(dfN%>%count(Date,Vote),aes(x=Date,y=n,colour=n))+
geom_line()
ggplot(dfN%>%count(Date,Vote),aes(x=Date,y=n,colour=n))+
geom_line()
dfN%>%count(Date,Vote)
library(shiny); runApp('D:/IC/leaderX/paper/prez/script/ab4.R')
runApp('D:/IC/leaderX/paper/prez/script/ab4.R')
runApp('D:/IC/leaderX/paper/prez/script/ab4.R')
sessionInfo()
library(tidyverse)
library(shiny)
library(dplyr)
library(googlesheets)
library(DT)
library(ggthemes)
library(shinyWidgets)
library(tableHTML)
runApp('D:/IC/leaderX/paper/prez/script/ab4.R')
install.packages('shiny')
shiny::runApp('D:/IC/leaderX/paper/prez/script/r')
runApp('D:/IC/leaderX/paper/prez/script/r')
runApp('D:/IC/leaderX/paper/prez/script/r')
library(rsconnect)
rsconnect::deployApp('D:/IC/leaderX/paper/prez/script/r')
library(rsconnect)
rsconnect::deployApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
shiny::runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
rsconnect::deployApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
shiny::runApp('D:/IC/leaderX/paper/prez/abTest')
shiny::runApp('D:/IC/leaderX/paper/prez/abTest')
shiny::runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
runApp('D:/IC/leaderX/paper/prez/abTest')
